import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const pages = {
  '/': {
    title: 'Brent Summers, AI-Powered Marketing Leader & Strategist',
    description: 'Transformational leader combining strategic vision, technical implementation, and behavior change.',
    ogTitle: 'Meet Brent Summers: AI-Powered Marketing Leader, Leveraging Ge',
    ogDescription: "I'm here to transform how enterprise marketing teams plan campaigns, organize teams, create content, and grow skills.",
    ogImage: 'https://brentsummers.com/og-images/home.png',
  },
  '/leadership': {
    title: 'Leadership Principles | Brent Summers',
    description: 'Explore leadership principles for bridging vision and execution through empathy, data, and long-term transformation.',
    ogTitle: 'Leadership That Spans Vision + Execution',
    ogDescription: 'Spotting trends and building bridges that unlock capability',
    ogImage: 'https://brentsummers.com/og-images/leadership.png',
  },
  '/speaking': {
    title: 'Brent Summers, Keynote Speaker | Bio + Headshot + Media Archive',
    description: 'Explore presentations, podcasts, panels, and interviews with Brent Summers',
    ogTitle: 'Book Brent for Your Next Event',
    ogDescription: "I share stories, strategic frameworks, and lessons from two decades of leading change.",
    ogImage: 'https://brentsummers.com/og-images/speaking.png',
  },
  '/design-case-studies': {
    title: 'Design Case Studies | Marketing + UX Strategy by Brent Summers',
    description: "Communicating the value of design is a unique challenge. Here's how I did it — thrice!",
    ogTitle: 'Three Agencies. Three Archives. Three Angles.',
    ogDescription: 'Curious about communicating the value of design? Get inspired by these case studies.',
    ogImage: 'https://brentsummers.com/og-images/design-case-studies.png',
  },
};

const distPath = path.resolve(__dirname, '..', 'dist');
const indexPath = path.join(distPath, 'index.html');

// Read the base index.html
const baseHtml = fs.readFileSync(indexPath, 'utf-8');

// Generate static pages for each route
Object.entries(pages).forEach(([route, meta]) => {
  let html = baseHtml;

  // Replace title
  html = html.replace(
    /<title>.*?<\/title>/,
    `<title>${meta.title}</title>`
  );

  // Replace meta description
  html = html.replace(
    /<meta name="description" content=".*?">/,
    `<meta name="description" content="${meta.description}">`
  );

  // CRITICAL: Remove any existing OG/Twitter tags to prevent duplicates
  html = html.replace(/<meta property="og:.*?"[^>]*>/g, '');
  html = html.replace(/<meta name="twitter:.*?"[^>]*>/g, '');
  html = html.replace(/<meta property="twitter:.*?"[^>]*>/g, '');
  
  // Remove the dynamic SEO comment marker
  html = html.replace(/<!-- Open Graph and Twitter tags are dynamically generated by react-helmet-async for each page -->/g, '');

  // Build fresh OG tags specific to this page
  const ogTags = `
    <meta property="og:title" content="${meta.ogTitle}">
    <meta property="og:description" content="${meta.ogDescription}">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://brentsummers.com${route === '/' ? '' : route}">
    <meta property="og:image" content="${meta.ogImage}">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="630">
    <meta property="og:image:alt" content="${meta.ogTitle}">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@brentsummers">
    <meta name="twitter:title" content="${meta.ogTitle}">
    <meta name="twitter:description" content="${meta.ogDescription}">
    <meta name="twitter:image" content="${meta.ogImage}">
    `;

  // Insert fresh OG tags right before the closing </head> tag
  html = html.replace(
    /<\/head>/,
    ogTags + '</head>'
  );

  // Determine output path
  let outputPath;
  if (route === '/') {
    outputPath = indexPath;
  } else {
    const routePath = path.join(distPath, route.slice(1));
    if (!fs.existsSync(routePath)) {
      fs.mkdirSync(routePath, { recursive: true });
    }
    outputPath = path.join(routePath, 'index.html');
  }

  // Write the file
  fs.writeFileSync(outputPath, html, 'utf-8');
  console.log(`✓ Generated ${outputPath}`);
});

console.log('Static pages generated successfully!');
